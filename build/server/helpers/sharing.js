// Generated by CoffeeScript 1.7.1
var CozyAdapter, File, Folder, async, clearance, e, fs, jade, mailtemplate, templatefile;

File = require('../models/file');

Folder = require('../models/folder');

clearance = require('cozy-clearance');

async = require('async');

jade = require('jade');

fs = require('fs');

try {
  CozyAdapter = require('americano-cozy/node_modules/jugglingdb-cozy-adapter');
} catch (_error) {
  e = _error;
  CozyAdapter = require('jugglingdb-cozy-adapter');
}

module.exports.limitedTree = function(folder, req, perm, callback) {
  if (typeof perm === "function") {
    callback = perm;
    perm = 'r';
  }
  return Folder.all((function(_this) {
    return function(err, folders) {
      var fullPath, parents, scan;
      if (err) {
        console.log(err);
        return callback([]);
      }
      fullPath = folder.getFullPath();
      parents = folders.filter(function(tested) {
        return fullPath.indexOf(tested.getFullPath()) === 0;
      });
      parents.sort(function(a, b) {
        return a.getFullPath().length - b.getFullPath().length;
      });
      scan = function() {
        var tested;
        tested = parents[0];
        if (!tested) {
          return callback([]);
        }
        return clearance.check(tested, perm, req, function(err, authorized) {
          if (err) {
            return callback([]);
          }
          if (!authorized) {
            parents.shift();
            return scan();
          } else {
            return callback(parents, authorized);
          }
        });
      };
      return scan();
    };
  })(this));
};

module.exports.checkClearance = function(doc, req, perm, callback) {
  var checkAscendantVisible;
  if (typeof perm === "function") {
    callback = perm;
    perm = 'r';
  }
  checkAscendantVisible = function() {
    return module.exports.limitedTree(doc, req, perm, function(results) {
      return callback(results.length !== 0);
    });
  };
  if (doc.constructor === File) {
    return clearance.check(doc, perm, req, function(err, result) {
      if (result) {
        return callback(true);
      } else {
        return checkAscendantVisible();
      }
    });
  } else {
    return checkAscendantVisible();
  }
};

templatefile = require('path').join(__dirname, '../views/sharemail.jade');

mailtemplate = jade.compile(fs.readFileSync(templatefile, 'utf8'));

module.exports.sendMail = function(type, doc, key, cb) {
  var rule;
  rule = doc.clearance.filter(function(rule) {
    return rule.key === key;
  })[0];
  return doc.getPublicURL((function(_this) {
    return function(err, url) {
      var mailOptions;
      if (err) {
        return cb(err);
      }
      url += '?key=' + key;
      mailOptions = {
        to: rule.email,
        subject: "Cozy-file: someone has shared a " + type + " with you",
        content: url,
        html: mailtemplate({
          name: doc.name,
          url: url,
          type: type
        })
      };
      return CozyAdapter.sendMailFromUser(mailOptions, function(err) {
        if (err) {
          console.log(err);
          return cb(err);
        } else {
          return cb(null);
        }
      });
    };
  })(this));
};
