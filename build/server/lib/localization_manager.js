// Generated by CoffeeScript 1.7.1
var Instance, LocalizationManager, Polyglot, fs, jade;

<<<<<<< HEAD
=======
jade = require('jade');

>>>>>>> 952451882b15c0539c0a4a837d8dd2fa1d0133b7
fs = require('fs');

Polyglot = require('node-polyglot');

<<<<<<< HEAD
jade = require('jade');

=======
>>>>>>> 952451882b15c0539c0a4a837d8dd2fa1d0133b7
Instance = require('../models/cozy_instance');

LocalizationManager = (function() {
  function LocalizationManager() {}

  LocalizationManager.prototype.polyglot = null;

  LocalizationManager.prototype.initialize = function(callback) {
    if (callback == null) {
      callback = function() {};
    }
    return this.retrieveLocale((function(_this) {
      return function(err, locale) {
        if (err != null) {
<<<<<<< HEAD
          return callback(err);
        } else {
          _this.polyglot = _this.getPolyglotByLocale(locale);
          return callback(null, _this.polyglot);
        }
=======
          _this.polyglot = _this.getPolyglotByLocale(null);
        } else {
          _this.polyglot = _this.getPolyglotByLocale(locale);
        }
        return callback(null, _this.polyglot);
>>>>>>> 952451882b15c0539c0a4a837d8dd2fa1d0133b7
      };
    })(this));
  };

  LocalizationManager.prototype.retrieveLocale = function(callback) {
    return Instance.getLocale(function(err, locale) {
      if ((err != null) || !locale) {
        locale = 'en';
      }
      return callback(err, locale);
    });
  };

  LocalizationManager.prototype.getPolyglotByLocale = function(locale) {
    var err, phrases;
<<<<<<< HEAD
    try {
      phrases = require("../locales/" + locale);
    } catch (_error) {
      err = _error;
=======
    if (locale != null) {
      try {
        phrases = require("../locales/" + locale);
      } catch (_error) {
        err = _error;
        phrases = require('../locales/en');
      }
    } else {
>>>>>>> 952451882b15c0539c0a4a837d8dd2fa1d0133b7
      phrases = require('../locales/en');
    }
    return new Polyglot({
      locale: locale,
      phrases: phrases
    });
  };

  LocalizationManager.prototype.t = function(key, params) {
    var _ref;
    if (params == null) {
      params = {};
    }
    return (_ref = this.polyglot) != null ? _ref.t(key, params) : void 0;
  };

  LocalizationManager.prototype.getEmailTemplate = function(name) {
    var filePath, templatefile;
    filePath = "../views/" + this.polyglot.currentLocale + "/" + name;
    templatefile = require('path').join(__dirname, filePath);
    return jade.compile(fs.readFileSync(templatefile, 'utf8'));
  };

  LocalizationManager.prototype.getPolyglot = function() {
    return this.polyglot;
  };

  return LocalizationManager;

})();

module.exports = new LocalizationManager();
